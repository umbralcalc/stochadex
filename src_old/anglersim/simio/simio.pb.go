// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: simio/simio.proto

package simio

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnglersimInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunTime    float64                       `protobuf:"fixed64,1,opt,name=runTime,proto3" json:"runTime,omitempty"`
	TimeScale  float64                       `protobuf:"fixed64,2,opt,name=timeScale,proto3" json:"timeScale,omitempty"`
	NumReals   int64                         `protobuf:"varint,3,opt,name=numReals,proto3" json:"numReals,omitempty"`
	NumSpecies int64                         `protobuf:"varint,4,opt,name=numSpecies,proto3" json:"numSpecies,omitempty"`
	Seed       int64                         `protobuf:"varint,5,opt,name=seed,proto3" json:"seed,omitempty"`
	FishPops   []*AnglersimInput_FishPopType `protobuf:"bytes,6,rep,name=fishPops,proto3" json:"fishPops,omitempty"`
}

func (x *AnglersimInput) Reset() {
	*x = AnglersimInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simio_simio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnglersimInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnglersimInput) ProtoMessage() {}

func (x *AnglersimInput) ProtoReflect() protoreflect.Message {
	mi := &file_simio_simio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnglersimInput.ProtoReflect.Descriptor instead.
func (*AnglersimInput) Descriptor() ([]byte, []int) {
	return file_simio_simio_proto_rawDescGZIP(), []int{0}
}

func (x *AnglersimInput) GetRunTime() float64 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *AnglersimInput) GetTimeScale() float64 {
	if x != nil {
		return x.TimeScale
	}
	return 0
}

func (x *AnglersimInput) GetNumReals() int64 {
	if x != nil {
		return x.NumReals
	}
	return 0
}

func (x *AnglersimInput) GetNumSpecies() int64 {
	if x != nil {
		return x.NumSpecies
	}
	return 0
}

func (x *AnglersimInput) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *AnglersimInput) GetFishPops() []*AnglersimInput_FishPopType {
	if x != nil {
		return x.FishPops
	}
	return nil
}

type AnglersimOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Species []int64   `protobuf:"varint,1,rep,packed,name=species,proto3" json:"species,omitempty"`
	Counts  []float64 `protobuf:"fixed64,2,rep,packed,name=counts,proto3" json:"counts,omitempty"`
}

func (x *AnglersimOutput) Reset() {
	*x = AnglersimOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simio_simio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnglersimOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnglersimOutput) ProtoMessage() {}

func (x *AnglersimOutput) ProtoReflect() protoreflect.Message {
	mi := &file_simio_simio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnglersimOutput.ProtoReflect.Descriptor instead.
func (*AnglersimOutput) Descriptor() ([]byte, []int) {
	return file_simio_simio_proto_rawDescGZIP(), []int{1}
}

func (x *AnglersimOutput) GetSpecies() []int64 {
	if x != nil {
		return x.Species
	}
	return nil
}

func (x *AnglersimOutput) GetCounts() []float64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

type AnglersimInput_FishPopType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitCount            float64   `protobuf:"fixed64,1,opt,name=initCount,proto3" json:"initCount,omitempty"`
	BirthRate            float64   `protobuf:"fixed64,2,opt,name=birthRate,proto3" json:"birthRate,omitempty"`
	DensDepPower         float64   `protobuf:"fixed64,3,opt,name=densDepPower,proto3" json:"densDepPower,omitempty"`
	DeathRate            float64   `protobuf:"fixed64,4,opt,name=deathRate,proto3" json:"deathRate,omitempty"`
	PredationRate        float64   `protobuf:"fixed64,5,opt,name=predationRate,proto3" json:"predationRate,omitempty"`
	PredatorBirthIncRate float64   `protobuf:"fixed64,6,opt,name=predatorBirthIncRate,proto3" json:"predatorBirthIncRate,omitempty"`
	FishingRate          float64   `protobuf:"fixed64,7,opt,name=fishingRate,proto3" json:"fishingRate,omitempty"`
	PredatorMatrixRow    []float64 `protobuf:"fixed64,8,rep,packed,name=predatorMatrixRow,proto3" json:"predatorMatrixRow,omitempty"`
	PreyMatrixRow        []float64 `protobuf:"fixed64,9,rep,packed,name=preyMatrixRow,proto3" json:"preyMatrixRow,omitempty"`
}

func (x *AnglersimInput_FishPopType) Reset() {
	*x = AnglersimInput_FishPopType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simio_simio_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnglersimInput_FishPopType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnglersimInput_FishPopType) ProtoMessage() {}

func (x *AnglersimInput_FishPopType) ProtoReflect() protoreflect.Message {
	mi := &file_simio_simio_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnglersimInput_FishPopType.ProtoReflect.Descriptor instead.
func (*AnglersimInput_FishPopType) Descriptor() ([]byte, []int) {
	return file_simio_simio_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AnglersimInput_FishPopType) GetInitCount() float64 {
	if x != nil {
		return x.InitCount
	}
	return 0
}

func (x *AnglersimInput_FishPopType) GetBirthRate() float64 {
	if x != nil {
		return x.BirthRate
	}
	return 0
}

func (x *AnglersimInput_FishPopType) GetDensDepPower() float64 {
	if x != nil {
		return x.DensDepPower
	}
	return 0
}

func (x *AnglersimInput_FishPopType) GetDeathRate() float64 {
	if x != nil {
		return x.DeathRate
	}
	return 0
}

func (x *AnglersimInput_FishPopType) GetPredationRate() float64 {
	if x != nil {
		return x.PredationRate
	}
	return 0
}

func (x *AnglersimInput_FishPopType) GetPredatorBirthIncRate() float64 {
	if x != nil {
		return x.PredatorBirthIncRate
	}
	return 0
}

func (x *AnglersimInput_FishPopType) GetFishingRate() float64 {
	if x != nil {
		return x.FishingRate
	}
	return 0
}

func (x *AnglersimInput_FishPopType) GetPredatorMatrixRow() []float64 {
	if x != nil {
		return x.PredatorMatrixRow
	}
	return nil
}

func (x *AnglersimInput_FishPopType) GetPreyMatrixRow() []float64 {
	if x != nil {
		return x.PreyMatrixRow
	}
	return nil
}

var File_simio_simio_proto protoreflect.FileDescriptor

var file_simio_simio_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x69, 0x6d, 0x69, 0x6f, 0x2f, 0x73, 0x69, 0x6d, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xb4, 0x04, 0x0a, 0x0e, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x72, 0x73, 0x69, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x72,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x61, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x61, 0x6c, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x65, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x66, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x70, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x72, 0x73, 0x69, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x73,
	0x68, 0x50, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x73, 0x68, 0x50, 0x6f,
	0x70, 0x73, 0x1a, 0xdb, 0x02, 0x0a, 0x0b, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x65, 0x61, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x70, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x66, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x70, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x6f,
	0x77, 0x18, 0x08, 0x20, 0x03, 0x28, 0x01, 0x52, 0x11, 0x70, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72,
	0x65, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x6f, 0x77,
	0x22, 0x43, 0x0a, 0x0f, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x72, 0x73, 0x69, 0x6d, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x73, 0x69, 0x6d, 0x69, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_simio_simio_proto_rawDescOnce sync.Once
	file_simio_simio_proto_rawDescData = file_simio_simio_proto_rawDesc
)

func file_simio_simio_proto_rawDescGZIP() []byte {
	file_simio_simio_proto_rawDescOnce.Do(func() {
		file_simio_simio_proto_rawDescData = protoimpl.X.CompressGZIP(file_simio_simio_proto_rawDescData)
	})
	return file_simio_simio_proto_rawDescData
}

var file_simio_simio_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_simio_simio_proto_goTypes = []interface{}{
	(*AnglersimInput)(nil),             // 0: main.AnglersimInput
	(*AnglersimOutput)(nil),            // 1: main.AnglersimOutput
	(*AnglersimInput_FishPopType)(nil), // 2: main.AnglersimInput.FishPopType
}
var file_simio_simio_proto_depIdxs = []int32{
	2, // 0: main.AnglersimInput.fishPops:type_name -> main.AnglersimInput.FishPopType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_simio_simio_proto_init() }
func file_simio_simio_proto_init() {
	if File_simio_simio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_simio_simio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnglersimInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simio_simio_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnglersimOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simio_simio_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnglersimInput_FishPopType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_simio_simio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_simio_simio_proto_goTypes,
		DependencyIndexes: file_simio_simio_proto_depIdxs,
		MessageInfos:      file_simio_simio_proto_msgTypes,
	}.Build()
	File_simio_simio_proto = out.File
	file_simio_simio_proto_rawDesc = nil
	file_simio_simio_proto_goTypes = nil
	file_simio_simio_proto_depIdxs = nil
}
